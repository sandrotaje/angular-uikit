{"version":3,"file":"angular-uikit.min.js","sources":["webpack:///webpack/bootstrap 469276e93a8dcbe3f83b","webpack:///src/angular-uikit-autocomplete.js","webpack:///src/angular-uikit-calendar.js","webpack:///src/angular-uikit-jsontableform.js","webpack:///src/angular-uikit-notallowarrayduplicate.js","webpack:///src/angular-uikit-pagination.js","webpack:///src/angular-uikit-sortable-item.js","webpack:///src/angular-uikit-sortable.js","webpack:///./src/angular-uikit-calendar.scss","webpack:///./src/angular-uikit-calendar.html","webpack:///src/angular-uikit.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 469276e93a8dcbe3f83b","ukNgAutocomplete.$inject = ['$http', '$timeout'];\r\nexport default function ukNgAutocomplete($http, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                ukSource: '=?',\r\n                ukSourcePath: '=?',\r\n                ukLabel: '=?',\r\n                ukTemplate: '=?',\r\n                ukOnSelect: '&'\r\n            },\r\n            link: function (scope, elem, attrs, ngModel) {\r\n\r\n                var resultsTemplate = scope.ukTemplate ? scope.ukTemplate : '<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-id=\"{{$item.id}}\" data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>';\r\n\r\n                var source = scope.ukSource ? populateSource(scope.ukSource) : scope.ukSourcePath ? callback : [{\r\n                    id: undefined,\r\n                    value: 'No source detected!'\r\n                }];\r\n\r\n                var autocomplete = UIkit.autocomplete(elem.parent(), {\r\n                    source: source,\r\n                    minLength: 1,\r\n                    delay: 0,\r\n                    template: resultsTemplate\r\n                });\r\n\r\n                scope.model = {};\r\n\r\n                ngModel.$render = function () {\r\n                    var viewValue = ngModel.$viewValue;\r\n                    if (viewValue) {\r\n                        elem.val(viewValue.value);\r\n\r\n                        scope.model.id = viewValue.id;\r\n                        scope.model.value = viewValue.value;\r\n\r\n                    } else {\r\n                        scope.model = {};\r\n                        elem.val('')\r\n                    }\r\n                };\r\n\r\n                function callback(release) {\r\n                    var search = {};\r\n                    search[scope.ukLabel ? scope.ukLabel : \"search\"] = ngModel.$viewValue;\r\n                    $http({\r\n                        method: \"GET\",\r\n                        url: scope.ukSourcePath,\r\n                        params: search\r\n                    }).then(\r\n                        function (resp) {\r\n                            scope.ukSource = resp.data;\r\n                            release(populateSource(resp.data));\r\n                        },\r\n                        function () {\r\n                            release([{id: undefined, value: 'Error retrieving data'}]);\r\n                        }\r\n                    );\r\n                }\r\n\r\n                function populateSource(objects) {\r\n                    var autocompleteRenderedObjects = [];\r\n                    objects.forEach(function (element, index) {\r\n                        var label = (typeof element === 'string' || element instanceof String) ? element : element[scope.ukLabel] ? element[scope.ukLabel] : 'Label missing!';\r\n                        autocompleteRenderedObjects.push({id: element.id ? element.id : index, value: label});\r\n                    });\r\n                    return autocompleteRenderedObjects;\r\n                }\r\n\r\n                scope.$watch('model.id + model.name', function () {\r\n                    if (scope.model.id || scope.model.name) {\r\n                        ngModel.$setViewValue({\r\n                            id: scope.model.id,\r\n                            value: scope.model.value\r\n                        });\r\n                    }\r\n                });\r\n\r\n                ngModel.$formatters = [(function (value) {\r\n                    return value;\r\n                })];\r\n\r\n                ngModel.$parsers.unshift(function (value) {\r\n                    if (value instanceof Object) {\r\n                        if (scope.ukSource && scope.ukSource[0].id) {\r\n                            return scope.ukSource.find(function (element) {\r\n                                return element.id == value.id;\r\n                            });\r\n                        }\r\n                        return scope.ukSource[value.id];\r\n                    }\r\n                    return undefined;\r\n                });\r\n\r\n                elem.off('change');\r\n\r\n                autocomplete.on('selectitem.uk.autocomplete', function (event, ui, obj) {\r\n                    if (ui) {\r\n                        ngModel.$setViewValue({\r\n                            id: ui.id,\r\n                            value: ui.value\r\n                        });\r\n                        if (scope.ukOnSelect) {\r\n                            $timeout(function () {\r\n                                scope.ukOnSelect({$selectedItem: scope.ukSource[ui.id]})\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                elem.on('blur', function () {\r\n                    if (!ngModel.$modelValue) {\r\n                        elem.val('');\r\n                        ngModel.$setViewValue(undefined);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-autocomplete.js","var templateUrl = require('ngtemplate-loader!html-loader!./angular-uikit-calendar.html');\r\nimport './angular-uikit-calendar.scss';\r\n\r\nexport default function ukNgCalendar() {\r\n        return {\r\n            restrict: \"EA\",\r\n            scope: {\r\n                date: \"=?\",\r\n                getEventsByDate: \"&?\"\r\n            },\r\n            templateUrl: templateUrl,\r\n            link: function (scope, element, attrs) {\r\n\r\n                scope.hasDaySelected = function (w) {\r\n                    if (!w) return false;\r\n                    for (var i = 0; i < w.length; i++) {\r\n                        var el = w[i];\r\n                        if (el.isSelected) return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                scope.toggleDay = function (day) {\r\n                    day.isSelected = !day.isSelected;\r\n                    scope.month.weeks.forEach(function (w) {\r\n                        w.forEach(function (d) {\r\n                            if (day.date !== d.date) {\r\n                                d.isSelected = false;\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n\r\n                scope.changeDate = function () {\r\n                    scope.date = new Date(Date.UTC(scope.yearSelected, scope.months.indexOf(scope.monthSelected), 1));\r\n                };\r\n\r\n                scope.addMonth = function (num) {\r\n\r\n                    var futureMonth = scope.date.getUTCMonth() + num;\r\n\r\n                    //11 is december\r\n                    if (futureMonth > 11) {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear() + 1, 0, 1));\r\n                    } else if (futureMonth < 0) {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear() - 1, 11, 1));\r\n                    } else {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear(), futureMonth, 1));\r\n                    }\r\n\r\n                };\r\n\r\n\r\n                scope.$watch(\"date\", function () {\r\n\r\n                    if (!scope.date) {\r\n                        scope.date = new Date();\r\n                    }\r\n\r\n                    var date = angular.copy(scope.date);\r\n\r\n\r\n                    scope.years = [2014, 2015, 2016, 2017];\r\n                    scope.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n                    scope.yearSelected = date.getUTCFullYear();\r\n                    scope.monthSelected = scope.months[date.getUTCMonth()];\r\n\r\n\r\n                    date.setUTCHours(0);\r\n                    date.setUTCMinutes(0);\r\n                    date.setUTCSeconds(0);\r\n                    date.setUTCMilliseconds(0);\r\n\r\n                    var today = new Date();\r\n                    today.setUTCHours(0);\r\n                    today.setUTCMinutes(0);\r\n                    today.setUTCSeconds(0);\r\n                    today.setUTCMilliseconds(0);\r\n\r\n                    var startDate = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), 1));\r\n\r\n                    while (startDate.getUTCDay() != 1) {\r\n                        startDate = new Date(startDate.getTime() - 24 * 60 * 60 * 1000);\r\n                    }\r\n\r\n                    var tmpDay = startDate;\r\n\r\n                    var month = {\r\n                        weeks: []\r\n                    };\r\n\r\n\r\n                    var generateMonth = function (tmpDay, eventMap) {\r\n                        var week = 0;\r\n                        for (var i = 0; i < 42; i++) {\r\n\r\n                            if (tmpDay.getUTCDay() == 1) {\r\n                                week++;\r\n                            }\r\n\r\n                            var jsonDay = {\r\n                                number: tmpDay.getUTCDate(),\r\n                                isToday: tmpDay.getTime() === today.getTime(),\r\n                                date: tmpDay,\r\n                                differentMonth: tmpDay.getUTCMonth() !== date.getUTCMonth(),\r\n                                events: eventMap[tmpDay]\r\n                            };\r\n                            if (!month.weeks[week]) {\r\n                                month.weeks[week] = [];\r\n                            }\r\n                            month.weeks[week].push(jsonDay);\r\n                            tmpDay = new Date(tmpDay.getTime() + 24 * 60 * 60 * 1000);\r\n                        }\r\n\r\n                        scope.month = month;\r\n                    };\r\n\r\n                    if (!scope.getEventsByDate) {\r\n                        generateMonth(tmpDay, []);\r\n                    } else {\r\n                        scope.getEventsByDate({$startDate: new Date(0), $endDate: new Date()}).then(function (events) {\r\n                            var eventMap = {};\r\n                            events.forEach(function (e) {\r\n                                var tmpDay = e.startDate;\r\n                                while (tmpDay <= e.endDate) {\r\n                                    if (!eventMap[tmpDay]) {\r\n                                        eventMap[tmpDay] = [];\r\n                                    }\r\n                                    eventMap[tmpDay].push(e);\r\n                                    tmpDay = new Date(tmpDay.getTime() + 24 * 60 * 60 * 1000);\r\n                                }\r\n                            });\r\n\r\n                            generateMonth(tmpDay, eventMap);\r\n                        }, function (error) {\r\n                            console.log(error);\r\n                        })\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-calendar.js","ukNgJsonTableForm.$inject = ['$compile', '$timeout'];\r\nexport default function ukNgJsonTableForm($compile, $timeout) {\r\n        return {\r\n            restrict: \"EA\",\r\n            scope: {\r\n                model: \"=\",\r\n                structure: \"=\",\r\n                onlyread: \"=\",\r\n                allHeaderInHead: \"=\"\r\n            },\r\n            link: function (scope, element, attrs) {\r\n                scope.newItem = {};\r\n                if (!scope.model) {\r\n                    scope.model = [];\r\n                }\r\n                var table = generateTable(scope.model, scope.structure);\r\n                element.append($compile(angular.element(table))(scope));\r\n\r\n                scope.addItem = function () {\r\n                    scope.model.push(angular.copy(scope.newItem));\r\n                    scope.newItem = {};\r\n                };\r\n\r\n                scope.removeItem = function removeItem(index) {\r\n\r\n                    UIkit.modal.confirm(\"Sei sicuro?\", function () {\r\n                        $timeout(function () {\r\n                            scope.model.splice(index, 1)\r\n                        });\r\n                    });\r\n\r\n                };\r\n\r\n                scope.getHeaders = function (struct) {\r\n                    var firstRow = [];\r\n                    var secondRow = [];\r\n                    var countNotArray = function (array) {\r\n                        return array.filter(function (el) {\r\n                            return el.type != 'array';\r\n                        }).length;\r\n                    };\r\n                    var first = true;\r\n                    var recur = function (arr) {\r\n                        arr.forEach(function (s) {\r\n                            if (s.type != 'array') {\r\n                                if (first) {\r\n                                    firstRow.push({ colspan: 1 });\r\n                                }\r\n                                secondRow.push(s);\r\n                            } else {\r\n                                first = false;\r\n\r\n                                var colspan = countNotArray(s.items);\r\n\r\n                                firstRow.push({\r\n                                    label: s.label,\r\n                                    colspan: colspan\r\n                                });\r\n                                recur(s.items);\r\n                            }\r\n                        });\r\n                    };\r\n                    recur(struct);\r\n                    return { firstRow: firstRow, secondRow: secondRow };\r\n                };\r\n\r\n                scope.generateTable = generateTable;\r\n\r\n            }\r\n        };\r\n\r\n        function generateTable(model, structure) {\r\n            var element = '<form name=\"newItemForm\" class=\"uk-form uk-form-stacked\" ng-submit=\"addItem()\" novalidate><fieldset><table ng-init=\"table.hasChild = false\" class=\"uk-table uk-ng-table-form\">';\r\n\r\n            //creating header\r\n            element += '<thead ng-if=\"!allHeaderInHead\"><tr>';\r\n            element += '<th data-ng-repeat=\"h in structure\">';\r\n            element += '<div ng-switch=\"h.type\">';\r\n            element += '<div ng-switch-when=\"array\" ng-init=\"table.hasChild = true\"></div>';\r\n            element += '<span ng-switch-default><i ng-if=\"h.icon\" class=\"uk-icon-{{h.icon}}\"></i> {{h.label}}</span>';\r\n            element += '</div>';\r\n            element += '</th>';\r\n            element += '<th ng-if=\"!onlyread\"></th>';\r\n            element += '</tr></thead>';\r\n            element += '<thead ng-if=\"allHeaderInHead\" ng-init=\"thead = getHeaders(structure)\">' +\r\n                '<tr><th data-ng-repeat=\"h in thead.firstRow\" colspan=\"{{h.colspan}}\">{{h.label}}</th></tr>' +\r\n                '<tr><th data-ng-repeat=\"h in thead.secondRow\">{{h.label}}</th></tr></thead>';\r\n\r\n\r\n\r\n            //---------------------\r\n\r\n            element += '<tbody>';\r\n\r\n            element += '<tr class=\"\" data-ng-repeat=\"m in model track by $index\" ng-init=\"row.index=$index+1\">';\r\n            element += '<td data-ng-repeat=\"s in structure\" ng-class=\"{\\'uk-table-middle\\': s.type!= \\'array\\'}\">';\r\n            element += '<div ng-switch=\"s.type\">';\r\n\r\n\r\n            element += '<div ng-switch-when=\"array\" class=\"uk-accordion\" data-uk-accordion=\"{showfirst: false, collapse: false, toggle: \\'.uk-accordion-title-{{s.property}}\\', containers:\\'.uk-accordion-content-{{s.property}}\\'}\">';\r\n            element += '<a ng-init=\"accordion.show = false\" ng-click=\"accordion.show=!accordion.show\" class=\"uk-width-1-1 uk-button uk-button-primary uk-button-large uk-accordion-title-{{s.property}}\"><span class=\"uk-float-left\"><i ng-if=\"s.icon\" class=\"uk-icon-{{s.icon}}\"></i> {{m[s.property].length}} {{s.label}} </span> <span class=\"uk-float-right\"><i ng-hide=\"accordion.show\" class=\"uk-icon-caret-right\"></i><i ng-show=\"accordion.show\" class=\"uk-icon-caret-down\"></i></span></a>';\r\n            element += '<div class=\"uk-accordion-content-{{s.property}}\">';\r\n            element += '<div data-uk-ng-json-table-form data-model=\"m[s.property]\" data-structure=\"s.items\" data-onlyread=\"onlyread\" data-allHeaderInHead=\"allHeaderInHead\"></div>';\r\n            element += '</div></div>';\r\n            \r\n            \r\n            // element += '<div ng-switch-when=\"autocomplete\">{{m[s.property][s.autocomplete.label]?m[s.property][s.autocomplete.label]:m[s.property]}}</div>';\r\n            // element += '<div ng-switch-when=\"select\">{{m[s.property][s.select.label]}}</div>';\r\n            // element += '<div ng-switch-when=\"sequence\" ng-init=\"m.sequence = row.index\">{{m.sequence}}</div>';\r\n            // element += '<div ng-switch-default>{{m[s.property]}}</div>';\r\n\r\n\r\n            element += '<div ng-switch-when=\"autocomplete\">{{m[s.property][s.autocomplete.label]?m[s.property][s.autocomplete.label]:m[s.property]}}</div>';\r\n            element += '<div ng-switch-when=\"sequence\" ng-init=\"m.sequence = row.index\">{{m.sequence}}</div>';\r\n\r\n            element += '<div ng-switch-when=\"select\">';\r\n            element += '<select ng-if=\"s.select.label\"  name=\"{{s.property}}\" data-ng-model=\"m[s.property]\" class=\"uk-width-1-1\" ng-options=\"opt[s.select.label] for opt in s.select.options track by opt[s.select.id]\" ng-required=\"s.required\" />';\r\n            element += '<select ng-if=\"!s.select.label\" name=\"{{s.property}}\" data-ng-model=\"m[s.property]\" class=\"uk-width-1-1\" ng-options=\"opt for opt in s.select.options\" ng-required=\"s.required\" />';\r\n            element += '</div>';\r\n\r\n            element += '<div ng-switch-when=\"autocomplete\" class=\"uk-autocomplete uk-form uk-width-1-1\"><input name=\"{{s.property}}\" type=\"text\" placeholder=\"{{s.placeholder?s.placeholder:\\'\\'}}\" class=\"uk-width-1-1\" ng-model=\"m[s.property]\" data-uk-source=\"s.autocomplete.source\" data-uk-label=\"s.autocomplete.label\" uk-ng-autocomplete required></div>';\r\n            element += '<input name=\"{{s.property}}\" ng-switch-when=\"number\" data-ng-model=\"m[s.property]\" type=\"number\" class=\"uk-width-1-1\" data-ng-max=\"{{s.number.max}}\" data-ng-min=\"{{s.number.min}}\" required>';\r\n            element += '<input name=\"{{s.property}}\" ng-switch-default data-ng-model=\"m[s.property]\" type=\"{{s.type}}\" placeholder=\"{{s.placeholder?s.placeholder:\\'\\'}}\" class=\"uk-width-1-1\" ng-required=\"s.required\">';\r\n\r\n\r\n\r\n\r\n\r\n\r\n            element += '</div>';\r\n            element += '</td>';\r\n            element += '<td ng-if=\"!onlyread\" style=\"padding:0 0 1px 0\"><button type=\"button\" class=\"uk-button uk-text-danger uk-width-1-1 uk-height-1-1\" ng-click=\"removeItem($index)\"><i class=\"uk-icon-trash uk-icon-small\"></i></button></td>';\r\n            element += '</tr>';\r\n\r\n            //creating input\r\n            element += '<tr ng-if=\"!onlyread\">';\r\n\r\n            element += '<td data-ng-repeat=\"h in structure\">';\r\n\r\n            element += '<div ng-switch=\"h.type\">';\r\n\r\n            element += '<span ng-switch-when=\"array\"></span>';\r\n            element += '<span ng-switch-when=\"sequence\">#</span>';\r\n\r\n            element += '<div ng-switch-when=\"select\">';\r\n            element += '<select ng-if=\"h.select.label\"  name=\"{{h.property}}\" data-ng-model=\"newItem[h.property]\" class=\"uk-width-1-1\" ng-options=\"opt[h.select.label] for opt in h.select.options track by opt[h.select.id]\" ng-required=\"h.required\" />';\r\n            element += '<select ng-if=\"!h.select.label\" name=\"{{h.property}}\" data-ng-model=\"newItem[h.property]\" class=\"uk-width-1-1\" ng-options=\"opt for opt in h.select.options\" ng-required=\"h.required\" />';\r\n            element += '</div>';\r\n\r\n            element += '<div ng-switch-when=\"autocomplete\" class=\"uk-autocomplete uk-form uk-width-1-1\"><input name=\"{{h.property}}\" type=\"text\" placeholder=\"{{h.placeholder?h.placeholder:\\'\\'}}\" class=\"uk-width-1-1\" ng-model=\"newItem[h.property]\" data-uk-source=\"h.autocomplete.source\" data-uk-label=\"h.autocomplete.label\" uk-ng-autocomplete ng-required=\"h.required\"></div>';\r\n            element += '<input name=\"{{h.property}}\" ng-switch-when=\"number\" data-ng-model=\"newItem[h.property]\" type=\"number\" class=\"uk-width-1-1\" data-ng-max=\"{{h.number.max}}\" data-ng-min=\"{{h.number.min}}\" ng-required=\"h.required\">';\r\n            element += '<input name=\"{{h.property}}\" ng-switch-default data-ng-model=\"newItem[h.property]\" type=\"{{h.type}}\" placeholder=\"{{h.placeholder?h.placeholder:\\'\\'}}\" class=\"uk-width-1-1\" ng-required=\"h.required\">';\r\n\r\n            element += '</div>';\r\n            element += '</td>';\r\n\r\n            element += '<td><button  ng-class=\"{\\'uk-text-success\\': newItemForm.$valid}\" type=\"submit\" class=\"uk-button\" style=\"width:80px\" data-ng-disabled=\"newItemForm.$invalid\"><i class=\"uk-icon-plus uk-icon-small\"></i></button></td>';\r\n            element += '</tr>';\r\n            //-----------------------\r\n\r\n            element += '</tbody>';\r\n            element += '</table></fieldset></form>';\r\n            return element;\r\n        }\r\n    }\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-jsontableform.js","export default function ukNgNotAllowArrayDuplicate() {\r\n    return {\r\n        restrict: \"A\",\r\n        require: \"ngModel\",\r\n        scope: {\r\n            ukNgNotAllowArrayDuplicate: \"=?\",\r\n            callbackUrl: \"&?\" //TODO\r\n        },\r\n        link: function (scope, element, attrs, ngModelController) {\r\n            ngModelController.$parsers.unshift(function (value) {\r\n                if (ngModelController.$modelValue !== value) {\r\n                    var valid = !scope.ukNgNotAllowArrayDuplicate.source.some(function (elem) {\r\n                        var existingValue = elem[scope.ukNgNotAllowArrayDuplicate.attribute];\r\n                        if (existingValue && value)\r\n                            return existingValue.toUpperCase() === value.toUpperCase();\r\n                        return false;\r\n                    });\r\n\r\n                    ngModelController.$setValidity('duplicate', valid);\r\n                    return valid ? value : undefined;\r\n                }\r\n            });\r\n\r\n            ngModelController.$formatters.unshift(function (value) {\r\n                ngModelController.$setValidity('duplicate', !scope.ukNgNotAllowArrayDuplicate.source.some(function (elem) {\r\n                    var existingValue = elem[scope.ukNgNotAllowArrayDuplicate.attribute];\r\n                    if (existingValue && value)\r\n                        return existingValue.toUpperCase() === value.toUpperCase();\r\n                    return false;\r\n                }));\r\n                return value;\r\n            });\r\n        }\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-notallowarrayduplicate.js","export default function ukNgPagination() {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                listSize: '=',\r\n                pageSize: '=',\r\n                onPageChange: '&'\r\n            },\r\n            link: function (scope, element, attrs) {\r\n                var ukPaginationOptions = {\r\n                    items: scope.listSize,\r\n                    itemsOnPage: scope.pageSize,\r\n                    currentPage: 0,\r\n                    displayedPages: 3,\r\n                    edges: 1\r\n                };\r\n\r\n                var pagination = UIkit.pagination(element, ukPaginationOptions);\r\n                window.pag = pagination;\r\n\r\n                element.on('select.uk.pagination', function (e, pageIndex) {\r\n                    scope.onPageChange({$page: pageIndex});\r\n                });\r\n\r\n                scope.$watch('scope.listSize', function () {\r\n                    pagination.options.items = scope.listSize;\r\n                    pagination.pages = Math.ceil(scope.listSize / scope.pageSize);\r\n                    pagination.render();\r\n                });\r\n\r\n                scope.$watch('scope.pageSize', function () {\r\n                    pagination.options.itemsOnPage = scope.pageSize;\r\n                    pagination.pages = Math.ceil(scope.listSize / scope.pageSize);\r\n                    pagination.render();\r\n                });\r\n            }\r\n        };\r\n    }\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-pagination.js","export default function ukNgSortableItem() {\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            item: '=ukNgSortableItem'\r\n        },\r\n        require: \"^^ukNgSortable\",\r\n        link: function (scope, element, attrs, ctrl) {\r\n            ctrl.addItem(element, scope.item);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-sortable-item.js","export default function ukNgSortable() {\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            options: '=ukNgSortable'\r\n        },\r\n        controller: function ($scope, $element) {\r\n\r\n            var ctrl = this;\r\n\r\n            UIkit.sortable($element[0], $scope.options);\r\n            $element.on('stop.uk.sortable', function (a, b, c, d) {\r\n                $scope.$applyAsync(function () {\r\n                    jQuery($element[0]).children().each(function (i, el) {\r\n                        var found = ctrl.items.find(function (elem) {\r\n                            return elem.element[0] === el;\r\n                        });\r\n                        found.item.order = i + 1;\r\n                    });\r\n                });\r\n            });\r\n            ctrl.items = [];\r\n\r\n            ctrl.addItem = function (element, i) {\r\n                ctrl.items.push({\r\n                    element: element,\r\n                    item: i\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-sortable.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/angular-uikit-calendar.scss\n// module id = 7\n// module chunks = 0","var path = 'C:/Users/sandro/workspaces/intellij/angular-uikit/src/angular-uikit-calendar.html';\nvar html = \"<div class=\\\"uk-grid uk-grid-collapse calendar\\\">\\r\\n   <div class=\\\"uk-width-1-1 calendar-nav\\\">\\r\\n      <a href=\\\"\\\" class=\\\"uk-icon-hover uk-icon-chevron-left\\\" ng-click=\\\"addMonth(-1)\\\"></a>\\r\\n      <div class=\\\"uk-form-select\\\" data-uk-form-select=\\\"{target:'a'}\\\">\\r\\n         <a>{{monthSelected}}</a> \\r\\n         <select ng-model=\\\"monthSelected\\\" ng-change=\\\"changeDate()\\\">\\r\\n            <option data-ng-repeat=\\\"m in months\\\" ng-value=\\\"m\\\">{{m}}</option>\\r\\n         </select>\\r\\n      </div>\\r\\n      <div class=\\\"uk-form-select\\\" data-uk-form-select=\\\"{target:'a'}\\\">\\r\\n         <a>{{yearSelected}}</a> \\r\\n         <select ng-model=\\\"yearSelected\\\" ng-change=\\\"changeDate()\\\">\\r\\n            <option data-ng-repeat=\\\"y in years | orderBy\\\" ng-value=\\\"y\\\">{{y}}</option>\\r\\n         </select>\\r\\n      </div>\\r\\n      <a href=\\\"\\\" class=\\\"uk-icon-hover uk-icon-chevron-right\\\" ng-click=\\\"addMonth(1)\\\"></a>\\r\\n   </div>\\r\\n   <div class=\\\"uk-width-1-1 calendar-header\\\">\\r\\n      <div class=\\\"uk-grid uk-grid-collapse calendar-header\\\">\\r\\n         <div class=\\\"uk-width calendar-header-day\\\" style=\\\"width: calc(100%/7)\\\" data-ng-repeat=\\\"d in ['Lun','Mar','Mer','Gio','Ven','Sab','Dom']\\\">\\r\\n            <div class=\\\"uk-panel uk-panel-box\\\">\\r\\n               <h3 class=\\\"uk-panel-title\\\">{{d}}</h3>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"uk-width-1-1 calendar-body\\\">\\r\\n      <div class=\\\"uk-grid uk-grid-collapse\\\" data-ng-repeat=\\\"w in month.weeks\\\" data-uk-grid-match=\\\"{target:'.uk-panel'}\\\">\\r\\n         <div class=\\\"uk-width calendar-day\\\" style=\\\"width: calc(100%/7)\\\" data-ng-repeat=\\\"d in w\\\" ng-click=\\\"toggleDay(d)\\\">\\r\\n            <div class=\\\"uk-panel uk-panel-box uk-panel-hover\\\" ng-class=\\\"{'active':d.isSelected}\\\">\\r\\n               <h3 class=\\\"uk-panel-title\\\" ng-class=\\\"{'calendar-different-month-day':d.differentMonth}\\\"><i class=\\\"uk-icon-calendar\\\"></i> {{d.number}}</h3>\\r\\n               <div class=\\\"uk-badge\\\" data-ng-repeat=\\\"e in d.events\\\">{{e.content}}</div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n      <!--<div data-ng-repeat-end class=\\\"uk-block calendar-day-detail\\\" ng-if=\\\"hasDaySelected(w)\\\">-->\\r\\n      <!--Dettaglio-->\\r\\n      <!--</div>-->\\r\\n   </div>\\r\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ngtemplate-loader!./~/html-loader!./src/angular-uikit-calendar.html\n// module id = 8\n// module chunks = 0","import ukNgAutocomplete from './angular-uikit-autocomplete';\r\nimport ukNgPagination from './angular-uikit-pagination';\r\nimport ukNgJsonTableForm from './angular-uikit-jsontableform';\r\nimport ukNgCalendar from './angular-uikit-calendar';\r\nimport ukNgSortableItem from './angular-uikit-sortable-item';\r\nimport ukNgSortable from './angular-uikit-sortable';\r\nimport ukNgNotAllowArrayDuplicate from './angular-uikit-notallowarrayduplicate';\r\n\r\n\r\nangular.module('angularUikit', [])\r\n    .directive('ukNgAutocomplete', ukNgAutocomplete)\r\n    .directive('ukNgPagination', ukNgPagination)\r\n    .directive('ukNgJsonTableForm', ukNgJsonTableForm)\r\n    .directive('ukNgCalendar', ukNgCalendar)\r\n    .directive('ukNgSortableItem', ukNgSortableItem)\r\n    .directive('ukNgSortable', ukNgSortable)\r\n    .directive('ukNgNotAllowArrayDuplicate', ukNgNotAllowArrayDuplicate)\r\n    ;\r\n\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArHA;AAuHA;;;;;;;;;;;;ACtHA;AACA;AAHA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AA5IA;AA8IA;;;;;;;;;;;;ACjJA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAlEA;AACA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;;;;;;;;;;;;AClCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAoCA;;;;;;;;;;;;ACrCA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AARA;AAUA;;;;;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA5BA;AA8BA;;;;;;AC/BA;;;;;;ACAA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAEA;;;","sourceRoot":""}