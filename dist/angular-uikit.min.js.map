{"version":3,"file":"angular-uikit.min.js","sources":["webpack:///webpack/bootstrap e2ff87c6ddcc8b7ba868","webpack:///src/angular-uikit-autocomplete.js","webpack:///src/angular-uikit-calendar.js","webpack:///src/angular-uikit-hx-submit-on-enter.js","webpack:///src/angular-uikit-jsontableform.js","webpack:///src/angular-uikit-notallowarrayduplicate.js","webpack:///src/angular-uikit-pagination.js","webpack:///src/angular-uikit-sortable-item.js","webpack:///src/angular-uikit-sortable.js","webpack:///./src/angular-uikit-calendar.scss","webpack:///./src/angular-uikit-jsontableform.scss","webpack:///./src/angular-uikit-calendar.html","webpack:///./src/angular-uikit-jsontableform-compact.html","webpack:///./src/angular-uikit-jsontableform.html","webpack:///src/angular-uikit.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e2ff87c6ddcc8b7ba868","ukNgAutocomplete.$inject = ['$http', '$timeout'];\r\nexport default function ukNgAutocomplete($http, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            ukSource: '=?',\r\n            ukSourcePath: '=?',\r\n            ukLabel: '=?',\r\n            ukTemplate: '=?',\r\n            ukOnSelect: '&'\r\n        },\r\n        link: function (scope, elem, attrs, ngModel) {\r\n\r\n            var resultsTemplate = scope.ukTemplate ? scope.ukTemplate : '<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-id=\"{{$item.id}}\" data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>';\r\n\r\n            var source = scope.ukSourcePath ? callback : scope.ukSource ? populateSource(scope.ukSource) : [{id: undefined, value: 'No source detected!'}];\r\n\r\n            var autocomplete = UIkit.autocomplete(elem.parent(), {\r\n                source: source,\r\n                minLength: 1,\r\n                delay: 0,\r\n                template: resultsTemplate\r\n            });\r\n\r\n            scope.$watch('ukSource', function () {\r\n                autocomplete.options.source = source = scope.ukSourcePath ? callback : scope.ukSource ? populateSource(scope.ukSource) : [{id: undefined, value: 'No source detected!'}];\r\n                //ngModel.$render();\r\n            });\r\n\r\n            function populateSource(objects) {\r\n                let autocompleteRenderedObjects = [];\r\n                objects.forEach(function (element, index) {\r\n                    var label = (typeof element === 'string' || element instanceof String) ? element : element[scope.ukLabel] ? element[scope.ukLabel] : 'Label missing!';\r\n                    autocompleteRenderedObjects.push({id: element.id ? element.id : index, value: label});\r\n                });\r\n                return autocompleteRenderedObjects;\r\n            }\r\n\r\n            \r\n            function callback(release) {\r\n                let search = {};\r\n                search[scope.ukLabel ? scope.ukLabel : \"search\"] = ngModel.$viewValue;\r\n                $http({\r\n                    method: \"GET\",\r\n                    url: scope.ukSourcePath,\r\n                    params: search\r\n                }).then(\r\n                    function (resp) {\r\n                        scope.ukSource = resp.data;\r\n                        release(populateSource(resp.data));\r\n                    },\r\n                    function () {\r\n                        release([{id: undefined, value: 'Error retrieving data'}]);\r\n                    }\r\n                );\r\n            }\r\n\r\n            ngModel.$formatters = [(function (value) {\r\n                let realValue = scope.ukLabel ? value[scope.ukLabel] : value;\r\n\r\n                if (!angular.isArray(source) || source.some(e=>realValue == e.value))\r\n                    return realValue;\r\n\r\n                return undefined;\r\n            })];\r\n\r\n            ngModel.$parsers.unshift(function (viewValue) {\r\n                    if (typeof viewValue !== 'string' && !(viewValue instanceof String))\r\n                        return viewValue;\r\n\r\n                    if (!angular.isArray(source)) { //if source is not an array it is a callback function\r\n                        return {id: undefined, value: viewValue, [scope.ukLabel]: viewValue};\r\n                    }\r\n\r\n                    return source.find(e=>e.value == viewValue);\r\n\r\n                },\r\n                function (viewValue) {\r\n                    if (!angular.isArray(scope.ukSource)) { //No source means callback function (init)\r\n                        return viewValue;\r\n                    }\r\n\r\n                    return scope.ukSource.find(function (el) {\r\n                        if (el.id)\r\n                            return el.id == viewValue.id;\r\n\r\n                        return el == viewValue.value || el[scope.ukLabel] == viewValue.value;\r\n                    });\r\n                });\r\n\r\n            autocomplete.on('selectitem.uk.autocomplete', function (event, ui, obj) {\r\n                if (ui) {\r\n                    ngModel.$setViewValue(ui);\r\n                    \r\n                    if (scope.ukOnSelect) {\r\n                        $timeout(function () {\r\n                            var item = scope.ukSource.find(function (el) {\r\n                                if (el.id)\r\n                                    return el.id == ui.id;\r\n\r\n                                return el == ui.value || el[scope.ukLabel] == ui.value;\r\n                            });\r\n                            scope.ukOnSelect({$selectedItem: item})\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-autocomplete.js","var templateUrl = require('ngtemplate-loader!html-loader!./angular-uikit-calendar.html');\r\nimport './angular-uikit-calendar.scss';\r\n\r\nexport default function ukNgCalendar() {\r\n        return {\r\n            restrict: \"EA\",\r\n            scope: {\r\n                date: \"=?\",\r\n                getEventsByDate: \"&?\",\r\n                onEventSelected: \"&?\"\r\n            },\r\n            templateUrl: templateUrl,\r\n            link: function (scope, element, attrs) {\r\n\r\n                var ONE_DAY = 24 * 60 * 60 * 1000;\r\n\r\n                scope.hasDaySelected = function (w) {\r\n                    if (!w) return false;\r\n                    for (var i = 0; i < w.length; i++) {\r\n                        var el = w[i];\r\n                        if (el.isSelected) return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                scope.changeDate = function () {\r\n                    scope.date = new Date(Date.UTC(scope.yearSelected, scope.months.indexOf(scope.monthSelected), 1));\r\n                };\r\n\r\n                scope.addMonth = function (num) {\r\n\r\n                    var futureMonth = scope.date.getUTCMonth() + num;\r\n\r\n                    //11 is december\r\n                    if (futureMonth > 11) {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear() + 1, 0, 1));\r\n                    } else if (futureMonth < 0) {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear() - 1, 11, 1));\r\n                    } else {\r\n                        scope.date = new Date(Date.UTC(scope.date.getUTCFullYear(), futureMonth, 1));\r\n                    }\r\n\r\n                };\r\n\r\n                scope.getDaysRemaining = function(numDays, day) {\r\n                    var dayRem = 7 - day;\r\n                    var num = numDays + 1;\r\n                    if (num > dayRem) {\r\n                        return dayRem;\r\n                    }\r\n                    return num;\r\n                }\r\n\r\n                scope.selectEvent = function(e) {\r\n                    scope.onEventSelected && scope.onEventSelected({$event: e});\r\n                }\r\n\r\n                scope.getStyle = function(style) {\r\n                    var ngStyle = {};\r\n                    if (style) {\r\n                        if (style.color) {\r\n                            ngStyle['color'] = style.color;\r\n                        }\r\n                        if (style.background) {\r\n                            ngStyle['background'] = style.background;\r\n                        }\r\n                        return ngStyle;\r\n                    }\r\n                    return {};\r\n                }\r\n\r\n                scope.getNumDays = function(startDate, endDate) {\r\n                    var startDate = new Date(startDate.getTime());\r\n                    var endDate = new Date(endDate.getTime());\r\n                    var tempDay = 1;\r\n                    if (endDate.getUTCMonth() != startDate.getUTCMonth()) {\r\n                        tempDay += endDate.getUTCDate();\r\n                        endDate.setUTCDate(0);\r\n                        \r\n                    }\r\n                    return endDate.getUTCDate() - startDate.getUTCDate() + tempDay;\r\n                }\r\n\r\n\r\n                scope.$watch(\"date\", function () {\r\n\r\n                    if (!scope.date) {\r\n                        scope.date = new Date();\r\n                    }\r\n\r\n                    var date = angular.copy(scope.date);\r\n\r\n\r\n                    scope.years = [2014, 2015, 2016, 2017];\r\n                    scope.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n                    scope.yearSelected = date.getUTCFullYear();\r\n                    scope.monthSelected = scope.months[date.getUTCMonth()];\r\n\r\n\r\n                    date.setUTCHours(0);\r\n                    date.setUTCMinutes(0);\r\n                    date.setUTCSeconds(0);\r\n                    date.setUTCMilliseconds(0);\r\n\r\n                    var today = new Date();\r\n                    today.setUTCHours(0);\r\n                    today.setUTCMinutes(0);\r\n                    today.setUTCSeconds(0);\r\n                    today.setUTCMilliseconds(0);\r\n\r\n                    var startDate = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), 1));\r\n\r\n                    while (startDate.getUTCDay() != 1) {\r\n                        startDate = new Date(startDate.getTime() - ONE_DAY);\r\n                    }\r\n\r\n                    var tmpDay = new Date(startDate.getTime());\r\n\r\n                    var month = {\r\n                        weeks: []\r\n                    };\r\n\r\n\r\n                    var generateMonth = function (tmpDay, eventMap) {\r\n                        var week = 0;\r\n                        for (var i = 0; i < 42; i++) {\r\n\r\n                            if (tmpDay.getUTCDay() == 1) {\r\n                                week++;\r\n                            }\r\n\r\n                            var jsonDay = {\r\n                                number: tmpDay.getUTCDate(),\r\n                                isToday: tmpDay.getTime() === today.getTime(),\r\n                                date: tmpDay,\r\n                                differentMonth: tmpDay.getUTCMonth() !== date.getUTCMonth(),\r\n                                events: eventMap[tmpDay.getUTCFullYear()+\"\"+tmpDay.getUTCMonth()+\"\"+tmpDay.getUTCDate()]\r\n                            };\r\n                            if (!month.weeks[week]) {\r\n                                month.weeks[week] = [];\r\n                            }\r\n                            month.weeks[week].push(jsonDay);\r\n                            tmpDay = new Date(tmpDay.getTime() + ONE_DAY);\r\n                        }\r\n\r\n                        scope.month = month;\r\n                    };\r\n\r\n                    if (!scope.getEventsByDate) {\r\n                        generateMonth(tmpDay, []);\r\n                    } else {\r\n                        scope.getEventsByDate({$startDate: startDate, $endDate: new Date(startDate.getTime() + 42 * ONE_DAY)}).then(function (events) {\r\n                            var eventMap = {};\r\n                            var events = [...events];\r\n                            events.forEach(function (e) {\r\n                                e.original = Object.assign({}, e);\r\n                                e.startDate = angular.isDate(e.startDate) ? e.startDate : new Date(e.startDate);\r\n                                e.endDate = angular.isDate(e.endDate) ? e.endDate : new Date(e.endDate);\r\n\r\n                                var tmpDay = e.startDate;\r\n                                e.numDays = scope.getNumDays(e.startDate, e.endDate);\r\n                                e.firstDay = true;\r\n                                while (tmpDay <= e.endDate) {\r\n                                    if (!eventMap[tmpDay.getUTCFullYear()+\"\"+tmpDay.getUTCMonth()+\"\"+tmpDay.getUTCDate()]) {\r\n                                        eventMap[tmpDay.getUTCFullYear()+\"\"+tmpDay.getUTCMonth()+\"\"+tmpDay.getUTCDate()] = [];\r\n                                    }\r\n                                    eventMap[tmpDay.getUTCFullYear()+\"\"+tmpDay.getUTCMonth()+\"\"+tmpDay.getUTCDate()].push(angular.copy(e));\r\n                                    tmpDay = new Date(tmpDay.getTime() + 24 * 60 * 60 * 1000);\r\n                                    e.firstDay = false;\r\n                                }\r\n                            });\r\n\r\n                            generateMonth(tmpDay, eventMap);\r\n                        }, function (error) {\r\n                            console.log(error);\r\n                        })\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-calendar.js","hxSubmitOnEnter.$inject = ['$timeout'];\r\nexport default function hxSubmitOnEnter($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'form',\r\n        scope: {\r\n            hxSubmitOnEnter: \"&\",\r\n            hxSubmitOnEnterAllowed: \"=?\"\r\n        },\r\n        link: function (scope, element, attrs, formController) {\r\n            if (scope.hxSubmitOnEnterAllowed) {\r\n                element.on(\"keydown keypress\", function (event) {\r\n                    if (event.which === 13 && formController.$valid) {\r\n                        event.preventDefault();\r\n                        $timeout(function () {\r\n                            scope.hxSubmitOnEnter();\r\n                        });\r\n                    }\r\n                });\r\n                \r\n            }\r\n        }\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-hx-submit-on-enter.js","import \"./angular-uikit-jsontableform.scss\";\r\nvar templateUrl = require('ngtemplate-loader!html-loader!./angular-uikit-jsontableform.html');\r\nvar compactTemplateUrl = require('ngtemplate-loader!html-loader!./angular-uikit-jsontableform-compact.html');\r\n\r\nukNgJsonTableForm.$inject = ['$compile', '$timeout'];\r\nexport default function ukNgJsonTableForm($compile, $timeout) {\r\n    return {\r\n        restrict: \"EA\",\r\n        scope: {\r\n            model: \"=\",\r\n            structure: \"=\",\r\n            readOnly: \"=?\",\r\n            canReorder: \"=?\",\r\n            allHeaderInHead: \"=?\",\r\n            noHeader: \"=?\",\r\n            deleteConfirmLabel: \"=?\",\r\n            submitOnEnter: \"=?\",\r\n            compact: \"=?\",\r\n            oddIteration: \"=?\"\r\n        },\r\n        templateUrl: function (elm, attrs) {\r\n            return !attrs.compact || attrs.compact==='false' ? templateUrl : compactTemplateUrl\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n            if (scope.compact) {\r\n                if(scope.oddIteration==undefined)\r\n                    scope.oddIteration = false;\r\n                scope.arraysStructure = [];\r\n                scope.valuesStructure = [];\r\n\r\n                scope.structure.forEach(function (el) {\r\n                    if (el.type != \"array\")\r\n                        scope.valuesStructure.push(el);\r\n                    else\r\n                        scope.arraysStructure.push(el);\r\n                });\r\n            }\r\n\r\n            scope.newItem = {};\r\n            if (!scope.model) {\r\n                scope.model = [];\r\n            }\r\n\r\n            scope.addItem = function () {\r\n                scope.model.push(angular.copy(scope.newItem));\r\n                scope.newItem = {};\r\n            };\r\n\r\n            scope.removeItem = function removeItem(index) {\r\n                UIkit.modal.confirm(scope.deleteConfirmLabel || \"Are you sure?\", function () {\r\n                    $timeout(function () {\r\n                        scope.model.splice(index, 1)\r\n                    });\r\n                });\r\n            };\r\n            \r\n            scope.getHeaders = function (struct) {\r\n                var firstRow = [];\r\n                var secondRow = [];\r\n                var countNotArray = function (array) {\r\n                    return array.filter(function (el) {\r\n                        return el.type != 'array';\r\n                    }).length;\r\n                };\r\n                var first = true;\r\n                var recur = function (arr) {\r\n                    arr.forEach(function (s) {\r\n                        if (s.type != 'array') {\r\n                            if (first) {\r\n                                firstRow.push({colspan: 1});\r\n                            }\r\n                            secondRow.push(s);\r\n                        } else {\r\n                            first = false;\r\n\r\n                            var colspan = countNotArray(s.items);\r\n\r\n                            firstRow.push({\r\n                                label: s.label,\r\n                                colspan: colspan\r\n                            });\r\n                            recur(s.items);\r\n                        }\r\n                    });\r\n                };\r\n                recur(struct);\r\n                return {firstRow: firstRow, secondRow: secondRow};\r\n            };\r\n\r\n            scope.objectify = function (el) {\r\n                var newObj = {};\r\n                if (angular.isArray(el)) {\r\n                    el.forEach(e => {\r\n                        newObj[e] = e;\r\n                    });\r\n                    return newObj;\r\n                }\r\n                return el;\r\n            };\r\n\r\n            scope.toggleIndexSelection = function (index) {\r\n                if (scope.selectedIndex == index)\r\n                    scope.selectedIndex = null;\r\n                else\r\n                    scope.selectedIndex = index;\r\n            };\r\n\r\n            scope.moveSelectedModelElementUp = function () {\r\n                swapArrayElements(scope.model, scope.selectedIndex, --scope.selectedIndex);\r\n            };\r\n\r\n            scope.moveSelectedModelElementDown = function () {\r\n                swapArrayElements(scope.model, scope.selectedIndex, ++scope.selectedIndex);\r\n            };\r\n\r\n            function swapArrayElements(array, from, to) {\r\n                var temp = array[to];\r\n                array[to] = array[from];\r\n                array[from] = temp;\r\n            }\r\n        }\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-jsontableform.js","export default function ukNgNotAllowArrayDuplicate() {\r\n    return {\r\n        restrict: \"A\",\r\n        require: \"ngModel\",\r\n        scope: {\r\n            ukNgNotAllowArrayDuplicate: \"=?\",\r\n            callbackUrl: \"&?\" //TODO\r\n        },\r\n        link: function (scope, element, attrs, ngModelController) {\r\n            ngModelController.$parsers.unshift(function (value) {\r\n                if (ngModelController.$modelValue !== value) {\r\n                    var valid = !scope.ukNgNotAllowArrayDuplicate.source.some(function (elem) {\r\n                        var existingValue = elem[scope.ukNgNotAllowArrayDuplicate.attribute];\r\n                        if (existingValue && value)\r\n                            return existingValue.toUpperCase() === value.toUpperCase();\r\n                        return false;\r\n                    });\r\n\r\n                    ngModelController.$setValidity('duplicate', valid);\r\n                    return valid ? value : undefined;\r\n                }\r\n            });\r\n\r\n            ngModelController.$formatters.unshift(function (value) {\r\n                ngModelController.$setValidity('duplicate', !scope.ukNgNotAllowArrayDuplicate.source.some(function (elem) {\r\n                    var existingValue = elem[scope.ukNgNotAllowArrayDuplicate.attribute];\r\n                    if (existingValue && value)\r\n                        return existingValue.toUpperCase() === value.toUpperCase();\r\n                    return false;\r\n                }));\r\n                return value;\r\n            });\r\n        }\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-notallowarrayduplicate.js","export default function ukNgPagination() {\r\n    return {\r\n        restrict: 'AE',\r\n        scope: {\r\n            listSize: '=',\r\n            pageSize: '=',\r\n            currentPage: '=?',\r\n            onPageChange: '&'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            var ukPaginationOptions = {\r\n                items: scope.listSize,\r\n                itemsOnPage: scope.pageSize,\r\n                currentPage: scope.currentPage ? scope.currentPage : 0,\r\n                displayedPages: 3,\r\n                edges: 1\r\n            };\r\n\r\n            var pagination = UIkit.pagination(element, ukPaginationOptions);\r\n            window.pag = pagination;\r\n\r\n            element.on('select.uk.pagination', function (e, pageIndex) {\r\n                scope.onPageChange({$page: pageIndex});\r\n            });\r\n\r\n            scope.$watch('listSize', function () {\r\n                pagination.options.items = scope.listSize;\r\n                pagination.pages = Math.ceil(scope.listSize / scope.pageSize);\r\n                pagination.render();\r\n            });\r\n\r\n            scope.$watch('pageSize', function () {\r\n                pagination.options.itemsOnPage = scope.pageSize;\r\n                pagination.pages = Math.ceil(scope.listSize / scope.pageSize);\r\n                pagination.render();\r\n            });\r\n        }\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-pagination.js","export default function ukNgSortableItem() {\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            item: '=ukNgSortableItem'\r\n        },\r\n        require: \"^^ukNgSortable\",\r\n        link: function (scope, element, attrs, ctrl) {\r\n            ctrl.addItem(element, scope.item);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-sortable-item.js","export default function ukNgSortable() {\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            options: '=ukNgSortable'\r\n        },\r\n        controller: [\"$scope\", \"$element\", function ($scope, $element) {\r\n\r\n            var ctrl = this;\r\n\r\n            UIkit.sortable($element[0], $scope.options);\r\n            $element.on('stop.uk.sortable', function (a, b, c, d) {\r\n                $scope.$applyAsync(function () {\r\n                    jQuery($element[0]).children().each(function (i, el) {\r\n                        var found = ctrl.items.find(function (elem) {\r\n                            return elem.element[0] === el;\r\n                        });\r\n                        found.item.order = i + 1;\r\n                    });\r\n                });\r\n            });\r\n            ctrl.items = [];\r\n\r\n            ctrl.addItem = function (element, i) {\r\n                ctrl.items.push({\r\n                    element: element,\r\n                    item: i\r\n                });\r\n            }\r\n        }]\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit-sortable.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/angular-uikit-calendar.scss\n// module id = 8\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/angular-uikit-jsontableform.scss\n// module id = 9\n// module chunks = 0","var path = 'C:/Users/Manuel/IdeaProjects/angular-uikit/src/angular-uikit-calendar.html';\nvar html = \"<div class=\\\"uk-grid uk-grid-collapse calendar\\\">\\r\\n   <div class=\\\"uk-width-1-1 calendar-nav\\\">\\r\\n      <a href=\\\"\\\" class=\\\"uk-icon-hover uk-icon-chevron-left\\\" ng-click=\\\"addMonth(-1)\\\"></a>\\r\\n      <div class=\\\"uk-form-select\\\" data-uk-form-select=\\\"{target:'a'}\\\">\\r\\n         <a>{{monthSelected}}</a> \\r\\n         <select ng-model=\\\"monthSelected\\\" ng-change=\\\"changeDate()\\\">\\r\\n            <option data-ng-repeat=\\\"m in months\\\" ng-value=\\\"m\\\">{{m}}</option>\\r\\n         </select>\\r\\n      </div>\\r\\n      <div class=\\\"uk-form-select\\\" data-uk-form-select=\\\"{target:'a'}\\\">\\r\\n         <a>{{yearSelected}}</a> \\r\\n         <select ng-model=\\\"yearSelected\\\" ng-change=\\\"changeDate()\\\">\\r\\n            <option data-ng-repeat=\\\"y in years | orderBy\\\" ng-value=\\\"y\\\">{{y}}</option>\\r\\n         </select>\\r\\n      </div>\\r\\n      <a href=\\\"\\\" class=\\\"uk-icon-hover uk-icon-chevron-right\\\" ng-click=\\\"addMonth(1)\\\"></a>\\r\\n   </div>\\r\\n   <div class=\\\"uk-width-1-1 calendar-header\\\">\\r\\n      <div class=\\\"uk-grid uk-grid-collapse calendar-header\\\">\\r\\n         <div class=\\\"uk-width calendar-header-day\\\" style=\\\"width: calc(100%/7)\\\" data-ng-repeat=\\\"d in ['Lun','Mar','Mer','Gio','Ven','Sab','Dom']\\\">\\r\\n            <div class=\\\"uk-panel uk-panel-box\\\">\\r\\n               <h3 class=\\\"uk-panel-title\\\">{{d}}</h3>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\\\"uk-width-1-1 calendar-body\\\">\\r\\n      <div class=\\\"uk-grid uk-grid-collapse\\\" data-ng-repeat=\\\"w in month.weeks\\\" data-uk-grid-match=\\\"{target:'.uk-panel'}\\\">\\r\\n         <div class=\\\"uk-width calendar-day\\\" style=\\\"width: calc(100%/7)\\\" data-ng-repeat=\\\"d in w\\\" data-ng-init=\\\"dayIndex = $index\\\">\\r\\n            <div class=\\\"uk-panel uk-panel-box uk-panel-hover\\\">\\r\\n               <div class=\\\"calendar-number\\\" ng-class=\\\"{'calendar-different-month-day':d.differentMonth}\\\">{{d.number}}</div>\\r\\n               <div data-ng-style=\\\"getStyle(e.style)\\\" data-ng-click=\\\"selectEvent(e.original)\\\" class=\\\"calendar-event {{e.className}}\\\" data-ng-class=\\\"{'multiday': e.numDays>1 && dayIndex!=6}\\\" data-ng-repeat=\\\"e in d.events | orderBy: ['-numDays','content']\\\">\\r\\n                   <span style=\\\"max-width: calc(100%*{{getDaysRemaining(e.numDays, dayIndex)}} - 10px)\\\" data-ng-if=\\\"e.firstDay || dayIndex==0\\\">{{e.content}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n      <!--<div data-ng-repeat-end class=\\\"uk-block calendar-day-detail\\\" ng-if=\\\"hasDaySelected(w)\\\">-->\\r\\n      <!--Dettaglio-->\\r\\n      <!--</div>-->\\r\\n   </div>\\r\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ngtemplate-loader!./~/html-loader!./src/angular-uikit-calendar.html\n// module id = 10\n// module chunks = 0","var path = 'C:/Users/Manuel/IdeaProjects/angular-uikit/src/angular-uikit-jsontableform-compact.html';\nvar html = \"<div class=\\\"uk-form uk-form-stacked\\\">\\r\\n    <fieldset>\\r\\n        <table class=\\\"uk-table uk-ng-table-form\\\" ng-class=\\\"{'jsontableform-highlight-border-odd': oddIteration, 'jsontableform-highlight-border-even': !oddIteration}\\\">\\r\\n            <thead ng-if=\\\"!noHeader\\\">\\r\\n            <tr>\\r\\n                <th ng-if=\\\"canReorder && !readOnly\\\" class=\\\"reorder-button-group uk-text-center\\\">\\r\\n                    <a ng-class=\\\"{'inactive': selectedIndex==null || selectedIndex==model.length-1}\\\" ng-click=\\\"moveSelectedModelElementDown()\\\" class=\\\"uk-text-primary uk-icon-small uk-icon-hover uk-icon-caret-down\\\"></a>\\r\\n                    <a ng-class=\\\"{'inactive': !selectedIndex}\\\" ng-click=\\\"moveSelectedModelElementUp()\\\" class=\\\"uk-text-primary uk-icon-hover uk-icon-caret-up uk-icon-small\\\"></a>\\r\\n                </th>\\r\\n                <th data-ng-repeat=\\\"h in valuesStructure\\\" ng-class=\\\"{'uk-width-1-10': h.type=='sequence'}\\\">\\r\\n                    <i ng-if=\\\"h.icon\\\" class=\\\"uk-icon-{{h.icon}}\\\"></i> {{h.label}}\\r\\n                </th>\\r\\n                <th ng-if=\\\"!readOnly\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n\\r\\n            <tbody>\\r\\n            <tr data-ng-repeat-start=\\\"m in model track by $index\\\" ng-mouseenter=\\\"rowHover=true\\\" ng-mouseleave=\\\"rowHover=false\\\" style=\\\"border-bottom: none !important\\\">\\r\\n                <td rowspan=\\\"{{arraysStructure.length+1}}\\\" ng-if=\\\"canReorder && !readOnly\\\" class=\\\"uk-text-center uk-table-middle\\\" style=\\\"cursor: pointer\\\" ng-click=\\\"toggleIndexSelection($index)\\\">\\r\\n                    <i class=\\\"uk-icon uk-icon-circle uk-text-primary\\\" ng-show=\\\"selectedIndex==$index\\\"></i>\\r\\n                    <i class=\\\"uk-icon uk-icon-circle-o uk-text-primary\\\" ng-show=\\\"rowHover && selectedIndex!=$index\\\"></i>\\r\\n                </td>\\r\\n                <td data-ng-repeat=\\\"s in valuesStructure\\\" class=\\\"uk-table-middle\\\">\\r\\n                    <div ng-switch=\\\"s.type\\\">\\r\\n                        <!-- AUTOCOMPLETE -->\\r\\n                        <div ng-switch-when=\\\"autocomplete\\\">{{m[s.property][s.autocomplete.label]?m[s.property][s.autocomplete.label]:m[s.property]}}</div>\\r\\n\\r\\n                        <!-- SEQUENCE -->\\r\\n                        <div ng-switch-when=\\\"sequence\\\">{{m.sequence = $parent.$parent.$index + 1}}</div>\\r\\n\\r\\n                        <!-- IMAGE -->\\r\\n                        <div ng-switch-when=\\\"image\\\">\\r\\n                            <img class=\\\"uk-thumbnail\\\" ng-style=\\\"{'max-width': s.image.maxWidth?s.image.maxWidth+'px':'100%', 'max-height': s.image.maxHeight?s.image.maxHeight+'px':'100%'}\\\" ng-src=\\\"{{m[s.property]?(s.image.interpolate? s.image.interpolate.base.replace(s.image.interpolate.value, s.image.interpolate.useId?m[s.property].id:m[s.property]): m[s.property]):s.image.default}}\\\" alt=\\\"\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <!-- SELECT -->\\r\\n                        <div ng-switch-when=\\\"select\\\">\\r\\n                            <div ng-if=\\\"!readOnly\\\">\\r\\n                                <select ng-if=\\\"s.select.label\\\"\\r\\n                                        name=\\\"{{s.property}}\\\"\\r\\n                                        data-ng-model=\\\"m[s.property]\\\"\\r\\n                                        class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                        ng-options=\\\"opt[s.select.label] for opt in s.select.options track by opt[s.select.id]\\\"\\r\\n                                        ng-required=\\\"s.required\\\"\\r\\n                                        title=\\\"{{s.property}}\\\"></select>\\r\\n\\r\\n                                <select ng-if=\\\"!s.select.label\\\"\\r\\n                                        name=\\\"{{s.property}}\\\"\\r\\n                                        data-ng-model=\\\"m[s.property]\\\"\\r\\n                                        class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                        ng-options=\\\"value as label for (label, value) in objectify(s.select.options)\\\"\\r\\n                                        ng-required=\\\"s.required\\\"\\r\\n                                        title=\\\"{{s.property}}\\\"></select>\\r\\n                            </div>\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                <div ng-if=\\\"s.select.label\\\">{{m[s.property][s.select.label]}}</div>\\r\\n                                <div ng-if=\\\"!s.select.label\\\">{{m[s.property]}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- NUMBER -->\\r\\n                        <div ng-switch-when=\\\"number\\\">\\r\\n                            <input name=\\\"{{s.property}}\\\"\\r\\n                                   data-ng-model=\\\"m[s.property]\\\"\\r\\n                                   type=\\\"number\\\"\\r\\n                                   class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                   data-ng-max=\\\"{{s.number.max}}\\\"\\r\\n                                   data-ng-min=\\\"{{s.number.min}}\\\"\\r\\n                                   ng-required=\\\"s.required\\\"\\r\\n                                   title=\\\"{{s.property}}\\\"\\r\\n                                   ng-if=\\\"!readOnly\\\">\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                {{m[s.property]}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- DEFAULT -->\\r\\n                        <div ng-switch-default>\\r\\n                            <input name=\\\"{{s.property}}\\\"\\r\\n                                   data-ng-model=\\\"m[s.property]\\\"\\r\\n                                   type=\\\"{{s.type}}\\\"\\r\\n                                   placeholder=\\\"{{s.placeholder?s.placeholder:''}}\\\"\\r\\n                                   class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                   ng-required=\\\"s.required\\\"\\r\\n                                   ng-if=\\\"!readOnly\\\">\\r\\n\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                {{m[s.property]}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </td>\\r\\n\\r\\n                <!-- TRASH BUTTON -->\\r\\n                <td rowspan=\\\"{{arraysStructure.length+1}}\\\" ng-if=\\\"!readOnly\\\" class=\\\"jstableform-button\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"uk-button uk-text-danger uk-width-1-1 uk-height-1-1\\\" ng-click=\\\"removeItem($index)\\\">\\r\\n                        <i class=\\\"uk-icon-trash uk-icon-small\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n            <tr data-ng-repeat-end data-ng-if=\\\"arraysStructure.length\\\" style=\\\"border-top: none !important\\\">\\r\\n                <td colspan=\\\"{{valuesStructure.length}}\\\" data-ng-repeat=\\\"s in arraysStructure\\\">\\r\\n                    <div class=\\\"uk-accordion\\\" ng-if=\\\"!readOnly || m[s.property].length>0\\\" data-uk-accordion=\\\"{showfirst: false, collapse: false, toggle: '.uk-accordion-title-{{s.property}}', containers:'.uk-accordion-content-{{s.property}}'}\\\">\\r\\n                        <a ng-init=\\\"accordion.show = false\\\" ng-click=\\\"accordion.show=!accordion.show\\\" class=\\\"uk-width-1-1 uk-button uk-button-large uk-accordion-title-{{s.property}}\\\"\\r\\n                           ng-class=\\\"{'jsontableform-highlight-border-odd': !oddIteration, 'jsontableform-highlight-border-even': oddIteration}\\\">\\r\\n                            <span class=\\\"uk-float-left\\\">\\r\\n                                    <i ng-hide=\\\"accordion.show\\\" class=\\\"uk-icon-caret-right\\\"></i>\\r\\n                                    <i ng-show=\\\"accordion.show\\\" class=\\\"uk-icon-caret-down\\\"></i>\\r\\n                            </span>\\r\\n                            <span class=\\\"uk-float-left uk-margin-left\\\">\\r\\n                                    <i ng-if=\\\"s.icon\\\" class=\\\"uk-icon-{{s.icon}}\\\"></i> {{m[s.property].length}} {{s.label}}\\r\\n                            </span>\\r\\n                        </a>\\r\\n                        <div class=\\\"uk-accordion-content-{{s.property}}\\\">\\r\\n                            <div data-uk-ng-json-table-form\\r\\n                                 data-compact=\\\"compact\\\"\\r\\n                                 data-model=\\\"m[s.property]\\\"\\r\\n                                 data-can-reorder=\\\"s.canReorder\\\"\\r\\n                                 data-structure=\\\"s.items\\\"\\r\\n                                 data-read-only=\\\"readOnly\\\"\\r\\n                                 data-delete-confirm-label=\\\"deleteConfirmLabel\\\"\\r\\n                                 data-all-header-in-head=\\\"allHeaderInHead\\\"\\r\\n                                 data-property-name=\\\"m[s.property]\\\"\\r\\n                                 data-odd-iteration=\\\"!oddIteration\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div ng-if=\\\"readOnly&&!m[s.property]\\\" class=\\\"uk-width-1-1 uk-button uk-button-large\\\" ng-class=\\\"{'jsontableform-highlight-border-odd': !oddIteration, 'jsontableform-highlight-border-even': oddIteration}\\\">\\r\\n                            <span class=\\\"uk-float-left uk-margin-left\\\">\\r\\n                                    <i ng-if=\\\"s.icon\\\" class=\\\"uk-icon-{{s.icon}}\\\"></i> 0 {{s.label}}\\r\\n                                </span>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n            <tr ng-if=\\\"!readOnly\\\" ng-form=\\\"newItemForm\\\" hx-submit-on-enter-allowed=\\\"submitOnEnter\\\" hx-submit-on-enter=\\\"addItem()\\\" class=\\\"input-row\\\">\\r\\n                <td ng-if=\\\"canReorder\\\"></td>\\r\\n\\r\\n                <td data-ng-repeat=\\\"h in valuesStructure\\\">\\r\\n                    <div ng-switch=\\\"h.type\\\">\\r\\n\\r\\n                        <!-- SEQUENCE -->\\r\\n                        <span ng-switch-when=\\\"sequence\\\">#</span>\\r\\n\\r\\n                        <!-- SELECT -->\\r\\n                        <div ng-switch-when=\\\"select\\\">\\r\\n                            <select ng-if=\\\"h.select.label\\\"\\r\\n                                    name=\\\"{{h.property}}\\\"\\r\\n                                    data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                                    class=\\\"uk-width-1-1\\\"\\r\\n                                    ng-options=\\\"opt[h.select.label] for opt in h.select.options track by opt[h.select.id]\\\"\\r\\n                                    ng-required=\\\"h.required\\\"\\r\\n                                    title=\\\"{{h.property}}\\\"></select>\\r\\n\\r\\n                            <select ng-if=\\\"!h.select.label\\\"\\r\\n                                    name=\\\"{{h.property}}\\\"\\r\\n                                    data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                                    class=\\\"uk-width-1-1\\\"\\r\\n                                    ng-options=\\\"value as label for (label, value) in objectify(h.select.options)\\\"\\r\\n                                    ng-required=\\\"h.required\\\"\\r\\n                                    title=\\\"{{h.property}}\\\"></select>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- AUTOCOMPLETE -->\\r\\n                        <div ng-switch-when=\\\"autocomplete\\\" class=\\\"uk-autocomplete uk-form uk-width-1-1\\\">\\r\\n                            <input name=\\\"{{h.property}}\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"{{h.placeholder?h.placeholder:''}}\\\"\\r\\n                                   class=\\\"uk-width-1-1\\\"\\r\\n                                   ng-model=\\\"newItem[h.property]\\\"\\r\\n                                   data-uk-source-path=\\\"h.autocomplete.sourcePath\\\"\\r\\n                                   data-uk-source=\\\"h.autocomplete.source\\\"\\r\\n                                   data-uk-label=\\\"h.autocomplete.label\\\"\\r\\n                                   uk-ng-autocomplete\\r\\n                                   ng-required=\\\"h.required\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <!-- NUMBER -->\\r\\n                        <input name=\\\"{{h.property}}\\\"\\r\\n                               ng-switch-when=\\\"number\\\"\\r\\n                               data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                               type=\\\"number\\\"\\r\\n                               class=\\\"uk-width-1-1\\\"\\r\\n                               data-ng-max=\\\"{{h.number.max}}\\\"\\r\\n                               data-ng-min=\\\"{{h.number.min}}\\\"\\r\\n                               ng-required=\\\"h.required\\\"\\r\\n                               title=\\\"{{h.property}}\\\">\\r\\n\\r\\n                        <!-- DEFAULT -->\\r\\n                        <input name=\\\"{{h.property}}\\\"\\r\\n                               ng-switch-default\\r\\n                               data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                               type=\\\"{{h.type}}\\\"\\r\\n                               placeholder=\\\"{{h.placeholder?h.placeholder:''}}\\\"\\r\\n                               class=\\\"uk-width-1-1\\\"\\r\\n                               ng-required=\\\"h.required\\\">\\r\\n                    </div>\\r\\n                </td>\\r\\n\\r\\n                <td class=\\\"jstableform-button\\\">\\r\\n                    <button ng-class=\\\"{'uk-text-success': newItemForm.$valid}\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            data-ng-click=\\\"addItem()\\\"\\r\\n                            class=\\\"uk-button uk-width-1-1 uk-height-1-1\\\"\\r\\n                            data-ng-disabled=\\\"newItemForm.$invalid\\\">\\r\\n                        <i class=\\\"uk-icon-plus uk-icon-small\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </fieldset>\\r\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ngtemplate-loader!./~/html-loader!./src/angular-uikit-jsontableform-compact.html\n// module id = 11\n// module chunks = 0","var path = 'C:/Users/Manuel/IdeaProjects/angular-uikit/src/angular-uikit-jsontableform.html';\nvar html = \"<div class=\\\"uk-form uk-form-stacked\\\">\\r\\n    <fieldset>\\r\\n        <table ng-init=\\\"table.hasChild = false\\\" class=\\\"uk-table uk-ng-table-form\\\">\\r\\n            <thead ng-if=\\\"!allHeaderInHead && !noHeader\\\">\\r\\n            <tr>\\r\\n                <th ng-if=\\\"canReorder&&!readOnly\\\" class=\\\"reorder-button-group uk-text-center\\\">\\r\\n                    <a ng-class=\\\"{'inactive': selectedIndex==null || selectedIndex==model.length-1}\\\" ng-click=\\\"moveSelectedModelElementDown()\\\" class=\\\"uk-text-primary uk-icon-small uk-icon-hover uk-icon-caret-down\\\"></a>\\r\\n                    <a ng-class=\\\"{'inactive': !selectedIndex}\\\" ng-click=\\\"moveSelectedModelElementUp()\\\" class=\\\"uk-text-primary uk-icon-hover uk-icon-caret-up uk-icon-small\\\"></a>\\r\\n                </th>\\r\\n                <th data-ng-repeat=\\\"h in structure\\\">\\r\\n                    <div ng-switch=\\\"h.type\\\">\\r\\n                        <div ng-switch-when=\\\"array\\\" ng-init=\\\"table.hasChild = true\\\"></div>\\r\\n                        <span ng-switch-default><i ng-if=\\\"h.icon\\\" class=\\\"uk-icon-{{h.icon}}\\\"></i> {{h.label}}</span>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th ng-if=\\\"!readOnly\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n\\r\\n            <!-- TODO -->\\r\\n            <thead ng-if=\\\"allHeaderInHead\\\" ng-init=\\\"thead = getHeaders(structure)\\\">\\r\\n            <tr>\\r\\n                <th data-ng-repeat=\\\"h in thead.firstRow\\\" colspan=\\\"{{h.colspan}}\\\">{{h.label}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th data-ng-repeat=\\\"h in thead.secondRow\\\">{{h.label}}</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <!-- --- -->\\r\\n\\r\\n            <tbody>\\r\\n            <tr class=\\\"\\\" data-ng-repeat=\\\"m in model track by $index\\\" ng-mouseenter=\\\"rowHover=true\\\" ng-mouseleave=\\\"rowHover=false\\\">\\r\\n                <td ng-if=\\\"canReorder && !readOnly\\\" class=\\\"uk-text-center uk-table-middle\\\" style=\\\"cursor: pointer\\\" ng-click=\\\"toggleIndexSelection($index)\\\">\\r\\n                    <i class=\\\"uk-icon uk-icon-circle uk-text-primary\\\" ng-show=\\\"selectedIndex==$index\\\"></i>\\r\\n                    <i class=\\\"uk-icon uk-icon-circle-o uk-text-primary\\\" ng-show=\\\"rowHover && selectedIndex!=$index\\\"></i>\\r\\n                </td>\\r\\n                <td data-ng-repeat=\\\"s in structure\\\" ng-class=\\\"{'uk-table-middle': s.type!= 'array'}\\\">\\r\\n                    <div ng-switch=\\\"s.type\\\">\\r\\n\\r\\n                        <!-- ARRAY -->\\r\\n                        <div ng-switch-when=\\\"array\\\">\\r\\n                            <div class=\\\"uk-accordion\\\" ng-if=\\\"!readOnly || m[s.property].length>0\\\"\\r\\n                                 data-uk-accordion=\\\"{showfirst: false, collapse: false, toggle: '.uk-accordion-title-{{s.property}}', containers:'.uk-accordion-content-{{s.property}}'}\\\">\\r\\n                                <a ng-init=\\\"accordion.show = false\\\" ng-click=\\\"accordion.show=!accordion.show\\\" class=\\\"uk-width-1-1 uk-button uk-button-primary uk-button-large uk-accordion-title-{{s.property}}\\\">\\r\\n                                <span class=\\\"uk-float-left\\\">\\r\\n                                    <i ng-if=\\\"s.icon\\\" class=\\\"uk-icon-{{s.icon}}\\\"></i> {{m[s.property].length}} {{s.label}}\\r\\n                                </span>\\r\\n\\r\\n                                <span class=\\\"uk-float-right\\\">\\r\\n                                    <i ng-hide=\\\"accordion.show\\\" class=\\\"uk-icon-caret-right\\\"></i>\\r\\n                                    <i ng-show=\\\"accordion.show\\\" class=\\\"uk-icon-caret-down\\\"></i>\\r\\n                                </span>\\r\\n                                </a>\\r\\n                                <div class=\\\"uk-accordion-content-{{s.property}}\\\">\\r\\n                                    <div data-uk-ng-json-table-form\\r\\n                                         data-model=\\\"m[s.property]\\\"\\r\\n                                         data-can-reorder=\\\"s.canReorder\\\"\\r\\n                                         data-structure=\\\"s.items\\\"\\r\\n                                         data-read-only=\\\"readOnly\\\"\\r\\n                                         data-delete-confirm-label=\\\"deleteConfirmLabel\\\"\\r\\n                                         data-all-header-in-head=\\\"allHeaderInHead\\\"\\r\\n                                         data-property-name=\\\"m[s.property]\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div ng-if=\\\"readOnly&&!m[s.property]\\\" class=\\\"uk-width-1-1 uk-button uk-button-large\\\" ng-class=\\\"{'jsontableform-highlight-border-odd': !oddIteration, 'jsontableform-highlight-border-even': oddIteration}\\\">\\r\\n                                <span class=\\\"uk-float-left uk-margin-left\\\">\\r\\n                                    <i ng-if=\\\"s.icon\\\" class=\\\"uk-icon-{{s.icon}}\\\"></i> 0 {{s.label}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- IMAGE -->\\r\\n                        <div ng-switch-when=\\\"image\\\">\\r\\n                            <img class=\\\"uk-thumbnail\\\" ng-style=\\\"{'max-width': s.image.maxWidth?s.image.maxWidth+'px':'100%', 'max-height': s.image.maxHeight?s.image.maxHeight+'px':'100%'}\\\" ng-src=\\\"{{m[s.property]?(s.image.interpolate? s.image.interpolate.base.replace(s.image.interpolate.value, s.image.interpolate.useId?m[s.property].id:m[s.property]): m[s.property]):s.image.default}}\\\" alt=\\\"\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <!-- AUTOCOMPLETE -->\\r\\n                        <div ng-switch-when=\\\"autocomplete\\\">{{m[s.property][s.autocomplete.label]?m[s.property][s.autocomplete.label]:m[s.property]}}</div>\\r\\n\\r\\n                        <!-- TODO Modifica autocomplete non inserisce il valore vecchio-->\\r\\n                        <!--<div ng-switch-when=\\\"autocomplete\\\" class=\\\"uk-autocomplete uk-form uk-width-1-1\\\">\\r\\n                            <input name=\\\"{{s.property}}\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"{{s.placeholder?s.placeholder:''}}\\\"\\r\\n                                   class=\\\"uk-width-1-1\\\" ng-model=\\\"m[s.property]\\\"\\r\\n                                   data-uk-source-path=\\\"s.autocomplete.sourcePath\\\"\\r\\n                                   data-uk-source=\\\"s.autocomplete.source\\\"\\r\\n                                   data-uk-label=\\\"s.autocomplete.label\\\"\\r\\n                                   uk-ng-autocomplete\\r\\n                                   required>\\r\\n                        </div>-->\\r\\n\\r\\n\\r\\n                        <!-- SEQUENCE -->\\r\\n                        <div ng-switch-when=\\\"sequence\\\">{{m.sequence = $parent.$parent.$index + 1}}</div>\\r\\n\\r\\n                        <!-- SELECT -->\\r\\n                        <div ng-switch-when=\\\"select\\\">\\r\\n                            <div ng-if=\\\"!readOnly\\\">\\r\\n                                <select ng-if=\\\"s.select.label\\\"\\r\\n                                        name=\\\"{{s.property}}\\\"\\r\\n                                        data-ng-model=\\\"m[s.property]\\\"\\r\\n                                        class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                        ng-options=\\\"opt[s.select.label] for opt in s.select.options track by opt[s.select.id]\\\"\\r\\n                                        ng-required=\\\"s.required\\\"\\r\\n                                        title=\\\"{{s.property}}\\\"></select>\\r\\n\\r\\n                                <select ng-if=\\\"!s.select.label\\\"\\r\\n                                        name=\\\"{{s.property}}\\\"\\r\\n                                        data-ng-model=\\\"m[s.property]\\\"\\r\\n                                        class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                        ng-options=\\\"value as label for (label, value) in objectify(s.select.options)\\\"\\r\\n                                        ng-required=\\\"s.required\\\"\\r\\n                                        title=\\\"{{s.property}}\\\"></select>\\r\\n                            </div>\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                <div ng-if=\\\"s.select.label\\\">{{m[s.property][s.select.label]}}</div>\\r\\n                                <div ng-if=\\\"!s.select.label\\\">{{m[s.property]}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- NUMBER -->\\r\\n\\r\\n                        <div ng-switch-when=\\\"number\\\">\\r\\n                            <input name=\\\"{{s.property}}\\\"\\r\\n                                   data-ng-model=\\\"m[s.property]\\\"\\r\\n                                   type=\\\"number\\\"\\r\\n                                   class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                   data-ng-max=\\\"{{s.number.max}}\\\"\\r\\n                                   data-ng-min=\\\"{{s.number.min}}\\\"\\r\\n                                   ng-required=\\\"s.required\\\"\\r\\n                                   title=\\\"{{s.property}}\\\"\\r\\n                                   ng-if=\\\"!readOnly\\\">\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                {{m[s.property]}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <!-- DEFAULT -->\\r\\n\\r\\n                        <div ng-switch-default>\\r\\n                            <input name=\\\"{{s.property}}\\\"\\r\\n                                   data-ng-model=\\\"m[s.property]\\\"\\r\\n                                   type=\\\"{{s.type}}\\\"\\r\\n                                   placeholder=\\\"{{s.placeholder?s.placeholder:''}}\\\"\\r\\n                                   class=\\\"uk-form-blank uk-width-1-1\\\"\\r\\n                                   ng-required=\\\"s.required\\\"\\r\\n                                   ng-if=\\\"!readOnly\\\">\\r\\n\\r\\n                            <div ng-if=\\\"readOnly\\\">\\r\\n                                {{m[s.property]}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </td>\\r\\n\\r\\n                <!-- TRASH BUTTON -->\\r\\n                <td ng-if=\\\"!readOnly\\\" class=\\\"jstableform-button\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"uk-button uk-text-danger uk-width-1-1 uk-height-1-1\\\" ng-click=\\\"removeItem($index)\\\">\\r\\n                        <i class=\\\"uk-icon-trash uk-icon-small\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n            <tr ng-if=\\\"!readOnly\\\" ng-form=\\\"newItemForm\\\" hx-submit-on-enter-allowed=\\\"submitOnEnter\\\" hx-submit-on-enter=\\\"addItem()\\\">\\r\\n                <td ng-if=\\\"canReorder\\\"></td>\\r\\n\\r\\n                <td data-ng-repeat=\\\"h in structure\\\">\\r\\n                    <div ng-switch=\\\"h.type\\\">\\r\\n                        <!-- ARRAY -->\\r\\n                        <span ng-switch-when=\\\"array\\\"></span>\\r\\n\\r\\n                        <!-- SEQUENCE -->\\r\\n                        <span ng-switch-when=\\\"sequence\\\">#</span>\\r\\n\\r\\n                        <!-- SELECT -->\\r\\n                        <div ng-switch-when=\\\"select\\\">\\r\\n                            <select ng-if=\\\"h.select.label\\\"\\r\\n                                    name=\\\"{{h.property}}\\\"\\r\\n                                    data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                                    class=\\\"uk-width-1-1\\\"\\r\\n                                    ng-options=\\\"opt[h.select.label] for opt in h.select.options track by opt[h.select.id]\\\"\\r\\n                                    ng-required=\\\"h.required\\\"\\r\\n                                    title=\\\"{{h.property}}\\\"></select>\\r\\n\\r\\n                            <select ng-if=\\\"!h.select.label\\\"\\r\\n                                    name=\\\"{{h.property}}\\\"\\r\\n                                    data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                                    class=\\\"uk-width-1-1\\\"\\r\\n                                    ng-options=\\\"value as label for (label, value) in objectify(h.select.options)\\\"\\r\\n                                    ng-required=\\\"h.required\\\"\\r\\n                                    title=\\\"{{h.property}}\\\"></select>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- AUTOCOMPLETE -->\\r\\n                        <div ng-switch-when=\\\"autocomplete\\\" class=\\\"uk-autocomplete uk-form uk-width-1-1\\\">\\r\\n                            <input name=\\\"{{h.property}}\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"{{h.placeholder?h.placeholder:''}}\\\"\\r\\n                                   class=\\\"uk-width-1-1\\\"\\r\\n                                   ng-model=\\\"newItem[h.property]\\\"\\r\\n                                   data-uk-source-path=\\\"h.autocomplete.sourcePath\\\"\\r\\n                                   data-uk-source=\\\"h.autocomplete.source\\\"\\r\\n                                   data-uk-label=\\\"h.autocomplete.label\\\"\\r\\n                                   uk-ng-autocomplete\\r\\n                                   ng-required=\\\"h.required\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <!-- NUMBER -->\\r\\n                        <input name=\\\"{{h.property}}\\\"\\r\\n                               ng-switch-when=\\\"number\\\"\\r\\n                               data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                               type=\\\"number\\\"\\r\\n                               class=\\\"uk-width-1-1\\\"\\r\\n                               data-ng-max=\\\"{{h.number.max}}\\\"\\r\\n                               data-ng-min=\\\"{{h.number.min}}\\\"\\r\\n                               ng-required=\\\"h.required\\\"\\r\\n                               title=\\\"{{h.property}}\\\">\\r\\n\\r\\n                        <!-- DEFAULT -->\\r\\n                        <input name=\\\"{{h.property}}\\\"\\r\\n                               ng-switch-default\\r\\n                               data-ng-model=\\\"newItem[h.property]\\\"\\r\\n                               type=\\\"{{h.type}}\\\"\\r\\n                               placeholder=\\\"{{h.placeholder?h.placeholder:''}}\\\"\\r\\n                               class=\\\"uk-width-1-1\\\"\\r\\n                               ng-required=\\\"h.required\\\">\\r\\n                    </div>\\r\\n                </td>\\r\\n\\r\\n                <td class=\\\"jstableform-button\\\">\\r\\n                    <button ng-class=\\\"{'uk-text-success': newItemForm.$valid}\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            data-ng-click=\\\"addItem()\\\"\\r\\n                            class=\\\"uk-button uk-width-1-1 uk-height-1-1\\\"\\r\\n                            data-ng-disabled=\\\"newItemForm.$invalid\\\">\\r\\n                        <i class=\\\"uk-icon-plus uk-icon-small\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </fieldset>\\r\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ngtemplate-loader!./~/html-loader!./src/angular-uikit-jsontableform.html\n// module id = 12\n// module chunks = 0","import ukNgAutocomplete from './angular-uikit-autocomplete';\r\nimport ukNgPagination from './angular-uikit-pagination';\r\nimport ukNgJsonTableForm from './angular-uikit-jsontableform';\r\nimport ukNgCalendar from './angular-uikit-calendar';\r\nimport ukNgSortableItem from './angular-uikit-sortable-item';\r\nimport ukNgSortable from './angular-uikit-sortable';\r\nimport ukNgNotAllowArrayDuplicate from './angular-uikit-notallowarrayduplicate';\r\nimport hxSubmitOnEnter from './angular-uikit-hx-submit-on-enter';\r\n\r\nangular.module('angularUikit', [])\r\n    .directive('ukNgAutocomplete', ukNgAutocomplete)\r\n    .directive('ukNgPagination', ukNgPagination)\r\n    .directive('ukNgJsonTableForm', ukNgJsonTableForm)\r\n    .directive('ukNgCalendar', ukNgCalendar)\r\n    .directive('ukNgSortableItem', ukNgSortableItem)\r\n    .directive('ukNgSortable', ukNgSortable)\r\n    .directive('ukNgNotAllowArrayDuplicate', ukNgNotAllowArrayDuplicate)\r\n    .directive('hxSubmitOnEnter', hxSubmitOnEnter);\r\n\n\n\n// WEBPACK FOOTER //\n// src/angular-uikit.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AACA;;;AAFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA3GA;AA6GA;;;;;;;;;;;;AC5GA;AACA;AAHA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAnLA;AAqLA;;;;;;;;;;;;ACxLA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAnBA;AAqBA;;;;;;;;;;;;AClBA;AACA;AANA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnHA;AAqHA;;;;;;;;;;;;AC3HA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;;;;;;;;;;;;AClCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;;;;;;;;;;;;ACtCA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AARA;AAUA;;;;;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA5BA;AA8BA;;;;;;AC/BA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;;;","sourceRoot":""}